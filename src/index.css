@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Mystical Techno-Mage Theme - RÃ­o Cuarto 1994 */
    --background: 24 15% 8%;
    --foreground: 40 20% 88%;

    --card: 24 20% 12%;
    --card-foreground: 40 20% 88%;

    --popover: 24 25% 10%;
    --popover-foreground: 40 20% 88%;

    /* Techno-magic green phosphorescent */
    --primary: 158 100% 50%;
    --primary-foreground: 24 15% 8%;
    
    /* Deep mystic violet */
    --secondary: 270 60% 30%;
    --secondary-foreground: 40 20% 88%;

    --muted: 24 15% 18%;
    --muted-foreground: 40 10% 60%;

    /* Neon cyan accent */
    --accent: 180 100% 50%;
    --accent-foreground: 24 15% 8%;

    --destructive: 0 70% 50%;
    --destructive-foreground: 40 20% 88%;

    --border: 24 20% 20%;
    --input: 24 20% 15%;
    --ring: 158 100% 50%;

    --radius: 0.25rem;

    /* Custom mystical tokens */
    --sepia: 40 35% 70%;
    --glow-green: 158 100% 50%;
    --glow-cyan: 180 100% 50%;
    --glow-violet: 270 80% 60%;
    --aged-paper: 40 40% 85%;
    --ritual-red: 0 80% 45%;
    
    /* Gradients */
    --gradient-mystic: linear-gradient(135deg, hsl(270 60% 30%), hsl(24 20% 12%));
    --gradient-tech: linear-gradient(135deg, hsl(158 100% 50% / 0.2), hsl(180 100% 50% / 0.1));
    --gradient-glitch: linear-gradient(90deg, hsl(158 100% 50% / 0.3), hsl(180 100% 50% / 0.3), hsl(270 80% 60% / 0.3));
    
    /* Shadows */
    --shadow-glow-green: 0 0 20px hsl(158 100% 50% / 0.5);
    --shadow-glow-cyan: 0 0 20px hsl(180 100% 50% / 0.5);
    --shadow-glow-violet: 0 0 30px hsl(270 80% 60% / 0.6);
    --shadow-mystic: 0 10px 30px hsl(270 60% 30% / 0.4);
    
    --sidebar-background: 24 20% 12%;
    --sidebar-foreground: 40 20% 88%;
    --sidebar-primary: 158 100% 50%;
    --sidebar-primary-foreground: 24 15% 8%;
    --sidebar-accent: 24 15% 18%;
    --sidebar-accent-foreground: 40 20% 88%;
    --sidebar-border: 24 20% 20%;
    --sidebar-ring: 158 100% 50%;
  }
}

@layer utilities {
  .glow-text-green {
    text-shadow: 0 0 10px hsl(var(--glow-green) / 0.8), 0 0 20px hsl(var(--glow-green) / 0.5);
  }
  
  .glow-text-cyan {
    text-shadow: 0 0 10px hsl(var(--glow-cyan) / 0.8), 0 0 20px hsl(var(--glow-cyan) / 0.5);
  }
  
  .glow-text-violet {
    text-shadow: 0 0 15px hsl(var(--glow-violet) / 0.9), 0 0 30px hsl(var(--glow-violet) / 0.6);
  }
  
  .border-glow-green {
    box-shadow: 0 0 15px hsl(var(--glow-green) / 0.5), inset 0 0 10px hsl(var(--glow-green) / 0.2);
  }
  
  .border-glow-cyan {
    box-shadow: 0 0 15px hsl(var(--glow-cyan) / 0.5), inset 0 0 10px hsl(var(--glow-cyan) / 0.2);
  }
  
  .glitch-effect {
    animation: glitch 3s infinite;
  }
  
  .scan-line {
    background: linear-gradient(
      to bottom,
      transparent 50%,
      hsl(var(--glow-green) / 0.05) 50%
    );
    background-size: 100% 4px;
    animation: scan 8s linear infinite;
  }
  
  .grain-texture {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='4' /%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.05'/%3E%3C/svg%3E");
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground grain-texture;
    font-family: 'Courier New', Courier, monospace;
  }
  
  h1, h2, h3, h4, h5, h6 {
    font-family: 'Georgia', 'Times New Roman', serif;
    font-weight: 700;
    letter-spacing: 0.05em;
  }
}

@keyframes glitch {
  0%, 100% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
}

@keyframes scan {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 0 100%;
  }
}

@keyframes pulse-glow {
  0%, 100% {
    opacity: 1;
    filter: brightness(1);
  }
  50% {
    opacity: 0.8;
    filter: brightness(1.2);
  }
}

@keyframes flicker {
  0%, 100% { opacity: 1; }
  41% { opacity: 1; }
  42% { opacity: 0.8; }
  43% { opacity: 1; }
  45% { opacity: 0.9; }
  46% { opacity: 1; }
}
